Start 
1 Comment “RunProcess = DEV or PRD”
2 Error handler: Try
3 String: Assign “Start” to $sRunningStatus$
4 Step “Update Database”
5 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-001-Update_Database” and assign output to variable
6 Step “Get start variables”
7 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-010-Get_Start_Variables” and assign output to variable
8 If string $sRunningStatus_ModuleBot$ Not equal to(≠) “Complete”
9 Error handler: Throw All Errors
10 Log to file “,"$sBotName$","-----Start Task Bot-----",Complete” to “$sLogFile_Progress$”
11 Comment “Sed email”
12 Email: Send an email to $sEmail_To$ with subject : “[$sRunProcess$] RPA Status : [$sBotName$] - Start”
14 Step “Download email attachment”
15 Log to file “,"$sBotName$","Download email attachment file",Complete” to “$sLogFile_Progress$”
16 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-010-Email_Downloader_&_Reader” and assign output to variable
17 Delay: Add a regular delay of 3 seconds
18 Step “Run AR1”
19 Log to file “,"$sBotName$","Run AR1",Complete” to “$sLogFile_Progress$”
20 Step “Assign  initial variables”
21 Comment “AR1 variables”
22 Boolean: Assign False to $bCopiedFileAR1$
23 Boolean: Assign False to $bUpdatedFileAR1$
24 Boolean: Assign False to $bFoundLog_FBL3N$
25 Boolean: Assign False to $bFoundLog_F-29$
26 Boolean: Assign False to $bFoundLog_FBL5N_AR1$
27 Step “Copy file AR1 to temp”
28 String: Assign “$sPath_Calculating$\Excel_AR1_Log.xlsx” to $sFileExcel_AR1_Process$
29 If file exists at “$sFileMasterExcel_AR1$”
30 File: Copy “$sFileMasterExcel_AR1$” to $sFileExcel_AR1_Process$
31 Boolean: Assign True to $bCopiedFileAR1$
32 Wait for condition file exists at “$sFileExcel_AR1_Process$”
33 Log to file “,"$sBotName$","Copy file master excel log AR1:$sFileMasterExcel…” to “$sLogFile_Progress$”
34 If: Else
35 Error handler: Throw All Errors
36 Step “Check transfer amount FBL3N”
37 Log to file “,"$sBotName$","AR1 Check FBL3N Start",Complete” to “$sLogFile_Progress$”
38 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-030-Check_Transfer_Amount” and assign output to variable
39 If string $sRunningStatus_ModuleBot$ Not equal to(≠) “Complete”
40 Error handler: Throw All Errors
41 Boolean: Assign True to $bUpdatedFileAR1$
42 Step “Get not found content”
43 String: Assign “” to $sContent_NotFoundFBL3N$
44 Loop: For each item in the list
45 Boolean: Assign True to $bFoundLog_FBL3N$
46 String: Assign “$sContent_NotFoundFBL3N$<li>$sStringLog$</li>” to $sContent_NotFoundFBL3N$
47 Log to file “,"$sBotName$","AR1 Check FBL3N Log: $sStringLog$",Complete” to “$sLogFile_Progress$”
48 Step “Post to F-29”
49 Log to file “,"$sBotName$","AR1 Post F-29 Start",Complete” to “$sLogFile_Progress$”
50 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-040-Post_Receive_Deposit” and assign output to variable
51 If string $sRunningStatus_ModuleBot$ Not equal to(≠) “Complete”
52 Error handler: Throw All Errors
53 Step “Get not found content”
54 String: Assign “” to $sContent_NotFoundF-29$
55 Loop: For each item in the list
56 Boolean: Assign True to $bFoundLog_F-29$
57 String: Assign “$sContent_NotFoundF-29$<li>$sStringLog$</li>” to $sContent_NotFoundF-29$
58 Log to file “,"$sBotName$","AR1 Post F-29 Log: $sStringLog$",Complete” to “$sLogFile_Progress$”
59 Step “Check Balance FBL5N part AR1”
60 Log to file “,"$sBotName$","AR1 Check FBL5N Start",Complete” to “$sLogFile_Progress$”
61 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-050-Get_Balance_From_SAP” and assign output to variable
62 If string $sRunningStatus_ModuleBot$ Not equal to(≠) “Complete”
63 Error handler: Throw All Errors
64 Step “Get not found content”
65 String: Assign “” to $sContent_NotFoundFBL5N$
66 Loop: For each item in the list
67 Boolean: Assign True to $bFoundLog_FBL5N_AR1$
68 String: Assign “$sContent_NotFoundFBL5N$<li>$sStringLog$</li>” to $sContent_NotFoundFBL5N$
69 Log to file “,"$sBotName$","AR1 Check FBL5N Log: $sStringLog$",Complete” to “$sLogFile_Progress$”
70 Step “Run AR2”
71 Log to file “,"$sBotName$","Run AR2",Complete” to “$sLogFile_Progress$”
72 Step “Assign  initial variables”
73 Comment “AR2 variables”
74 Boolean: Assign False to $bCopiedFileAR2$
75 Boolean: Assign False to $bUpdatedFileAR2$
76 Boolean: Assign False to $bFoundLog_MappingAR1$
77 Boolean: Assign False to $bFoundLog_F-30$
78 Boolean: Assign False to $bFoundLog_FBL5N_AR2$
79 Boolean: Assign False to $bFoundLog_CreatePV-Report$
80 Step “Copy file AR2 to temp”
81 String: Assign “$sPath_Calculating$\Excel_AR2_Log.xlsx” to $sFileExcel_AR2_Process$
82 If file exists at “$sFileMasterExcel_AR2$”
83 File: Copy “$sFileMasterExcel_AR2$” to $sFileExcel_AR2_Process$
84 Boolean: Assign True to $bCopiedFileAR2$
85 Wait for condition file exists at “$sFileExcel_AR2_Process$”
86 Log to file “,"$sBotName$","Copy file master excel log AR2:$sFileMasterExcel…” to “$sLogFile_Progress$”
87 If: Else
88 Error handler: Throw All Errors
89 Step “Check Balance FBL5N part AR2”
90 Log to file “,"$sBotName$","AR2 Check FBL5N Start",Complete” to “$sLogFile_Progress$”
91 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-050-Get_Balance_From_SAP” and assign output to variable
92 If string $sRunningStatus_ModuleBot$ Not equal to(≠) “Complete”
93 Error handler: Throw All Errors
94 Step “Get not found content”
95 String: Assign “” to $sContent_NotFoundFBL5N_AR2$
96 Loop: For each item in the list
97 Boolean: Assign True to $bFoundLog_FBL5N_AR2$
98 String: Assign “$sContent_NotFoundFBL5N_AR2$<li>$sStringLog$</li>” to $sContent_NotFoundFBL5N_AR2$
99 Log to file “,"$sBotName$","AR2 Check FBL5N Log: $sStringLog$",Complete” to “$sLogFile_Progress$”
100 Step “Mapping AR1 data”
101 Log to file “,"$sBotName$","AR2 Mapping AR1 Data Start",Complete” to “$sLogFile_Progress$”
102 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-060-Mapping_AR1_Data” and assign output to variable
103 If string $sRunningStatus_ModuleBot$ Not equal to(≠) “Complete”
104 Error handler: Throw All Errors
105 Boolean: Assign True to $bUpdatedFileAR2$
106 Step “Get not found content”
107 String: Assign “” to $sContent_NotFound_MappingAR1$
108 Loop: For each item in the list
109 Boolean: Assign True to $bFoundLog_MappingAR1$
110 String: Assign “$sContent_NotFound_MappingAR1$<li>$sStringLog$</li>” to $sContent_NotFound_MappingAR1$
111 Log to file “,"$sBotName$","AR2 Mapping AR1 Data Log: $sStringLog$",Complete” to “$sLogFile_Progress$”
112 Step “Post to F-30”
113 Log to file “,"$sBotName$","AR2 Post F-30 Start",Complete” to “$sLogFile_Progress$”
114 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-070-Clearing_Recieve_Deposit_F-30” and assign output to variable
115 If string $sRunningStatus_ModuleBot$ Not equal to(≠) “Complete”
116 Error handler: Throw All Errors
117 Step “Get not found content”
118 String: Assign “” to $sContent_NotFoundF-30$
119 Loop: For each item in the list
120 Boolean: Assign True to $bFoundLog_F-30$
121 String: Assign “$sContent_NotFoundF-30$<li>$sStringLog$</li>” to $sContent_NotFoundF-30$
122 Log to file “,"$sBotName$","AR2 Post F-30 Log: $sStringLog$",Complete” to “$sLogFile_Progress$”
123 Step “Create PV-Report”
124 Log to file “,"$sBotName$","AR2 Create PV report Start",Complete” to “$sLogFile_Progress$”
125 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-080-Create_PV_Report” and assign output to variable
126 If string $sRunningStatus_ModuleBot$ Not equal to(≠) “Complete”
127 Error handler: Throw All Errors
128 Step “Get not found content”
129 String: Assign “” to $sContent_NotCreatePV-Report$
130 Loop: For each item in the list
131 Boolean: Assign True to $bFoundLog_CreatePV-Report$
132 String: Assign “$sContent_NotCreatePV-Report$<li>$sStringLog$</li>” to $sContent_NotCreatePV-Report$
133 Log to file “,"$sBotName$","AR2 Create PV report Log: $sStringLog$",Complete” to “$sLogFile_Progress$”
134 String: Assign “Complete” to $sRunningStatus$
135 Error handler: Catch All Errors
136 String: Assign “Fail” to $sRunningStatus$
137 Log to file “,"$sBotName$","Error: $sErrorMessage$",Fail,"At line: $nErrorLineNumber$” to “$sLogFile_Progress$”
138 Log to file “,"$sBotName$","Error: $sErrorMessage$",Fail,"At line: $nErrorLineNumber$” to “$sLogFile_Error$”
139 Error handler: Finally
140 Step “Copy file AR1 back to path master”
141 Comment “File AR1 in calculating path exist And File AR1 was copied And FIle AR1 Was updated”
142 If ( file exists at “$sFileExcel_AR1_Process$” ) and ( boolean $bUpdatedFileAR1$ Equals to(=) True ) and ( boolean $bCopiedFileAR1$ Equals to(=) True )
143 File: Copy “$sFileExcel_AR1_Process$” to $sFileMasterExcel_AR1$
144 Delay: Add a regular delay of 1 seconds
145 Log to file “,"$sBotName$","Copy Temp master AR1 back to master folder",Comp…” to “$sLogFile_Progress$”
146 Step “Copy file AR2 back to path master”
147 Comment “File AR2in calculating path exist And File AR2 was copied And FIle AR2 Was updated”
148 If ( file exists at “$sFileExcel_AR2_Process$” ) and ( boolean $bUpdatedFileAR2$ Equals to(=) True ) and ( boolean $bCopiedFileAR2$ Equals to(=) True )
149 File: Copy “$sFileExcel_AR2_Process$” to $sFileMasterExcel_AR2$
150 Delay: Add a regular delay of 1 seconds
151 Log to file “,"$sBotName$","Copy Temp master AR2 back to master folder",Comp…” to “$sLogFile_Progress$”
152 Step “Get Log email content AR1”
153 String: Assign “” to $sContent_Log$
154 If ( boolean $bFoundLog_FBL3N$ Equals to(=) True ) or ( boolean $bFoundLog_F-29$ Equals to(=) True ) or ( boolean $bFoundLog_FBL5N_AR1$ Equals to(=) True )
155 String: Assign “<p><b>Process AR1 Logs</b></p><br>” to $sContent_Log$
156 If boolean $bFoundLog_FBL3N$ Equals to(=) True
157 String: Assign “<p>Record not process in FBL3N</p><br><div>$sContent_NotFoundFB…” to $sContent_Log$
158 If boolean $bFoundLog_F-29$ Equals to(=) True
159 String: Assign “<p>Record not process in F-29</p><br><div>$sContent_NotFoundF-2…” to $sContent_Log$
160 If boolean $bFoundLog_FBL5N_AR1$ Equals to(=) True
161 String: Assign “<p>Record not process in FBL5N from AR1</p><br><div>$sContent_N…” to $sContent_Log$
162 String: Assign “$sContent_Log$<br>” to $sContent_Log$
163 Step “Get Log email content AR2”
165 If ( boolean $bFoundLog_FBL5N_AR2$ Equals to(=) True ) or ( boolean $bFoundLog_MappingAR1$ Equals to(=) True ) or ( boolean $bFoundLog_F-30$ Equals to(=) True ) or ( boolean $bFoundLog_CreatePV-Report$ Equals to(=) True )
166 String: Assign “$sContent_Log$<p><b>Process AR2 Logs</b></p><br>” to $sContent_Log$
167 If boolean $bFoundLog_FBL5N_AR2$ Equals to(=) True
168 String: Assign “<p>Record not process in FBL5N from AR2</p><br><div>$sContent_N…” to $sContent_Log$
169 If boolean $bFoundLog_MappingAR1$ Equals to(=) True
170 String: Assign “<p>Record not process in Mapping data</p><br><div>$sContent_Not…” to $sContent_Log$
171 If boolean $bFoundLog_F-30$ Equals to(=) True
172 String: Assign “<p>Record not process in F-30</p><br><div>$sContent_NotFoundF-3…” to $sContent_Log$
173 If boolean $bFoundLog_CreatePV-Report$ Equals to(=) True
174 String: Assign “<p>Record not process in Create PV report</p><br><div>$sContent…” to $sContent_Log$
175 Step “Send email”
176 If string $sRunningStatus$ Equals to(=) “Complete”
177 Email: Send an email to $sEmail_To$ with subject : “[$sRunProcess$] RPA Status : [$sBotName$] - Complete”
178 If: Else If string $sRunningStatus$ Equals to(=) “Fail”
179 Email: Send an email to $sEmail_To$ with subject : “[$sRunProcess$] RPA Status : [$sBotName$] - Fail”
180 Step “Update Database”
181 Task Bot: Run “Bots\AR Department\AR003-Receive_Waste_scrap\Sub Task\AR003-001-Update_Database” and assign output to variable
182 Log to file “,"$sBotName$","-----End Task Bot-----",Complete” to “$sLogFile_Progress$”
End 
